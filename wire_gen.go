// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"contact-management-restful/app"
	contracts3 "contact-management-restful/controller/contracts"
	impl3 "contact-management-restful/controller/impl"
	"contact-management-restful/middleware"
	"contact-management-restful/repositories/contracts"
	"contact-management-restful/repositories/impl"
	contracts2 "contact-management-restful/services/contracts"
	impl2 "contact-management-restful/services/impl"
	"github.com/google/wire"
	"net/http"
)

// Injectors from injector.go:

func InitializedServer() *http.Server {
	userRepositoryImpl := impl.NewUserRepositoryImpl()
	db := app.NewDB()
	authMiddleware := middleware.NewAuthMiddleware(userRepositoryImpl, db)
	validate := NewValidator()
	userServiceImpl := impl2.NewUserServiceImpl(userRepositoryImpl, db, validate)
	userControllerImpl := impl3.NewUserController(userServiceImpl)
	contactRepositoryImpl := impl.NewContactRepositoryImpl()
	contactServiceImpl := impl2.NewContactServiceImpl(contactRepositoryImpl, db, validate)
	contactControllerImpl := impl3.NewContactControllerImpl(contactServiceImpl)
	addressRepositoryImpl := impl.NewAddressRepositoryImpl()
	addressServiceImpl := impl2.NewAddressServiceImpl(addressRepositoryImpl, contactRepositoryImpl, db, validate)
	addressControllerImpl := impl3.NewAddressControllerImpl(addressServiceImpl)
	controllers := app.NewControllers(userControllerImpl, contactControllerImpl, addressControllerImpl)
	router := app.NewRouter(authMiddleware, controllers)
	server := NewServer(router)
	return server
}

// injector.go:

var userControllerSet = wire.NewSet(impl.NewUserRepositoryImpl, wire.Bind(new(contracts.UserRepository), new(*impl.UserRepositoryImpl)), impl2.NewUserServiceImpl, wire.Bind(new(contracts2.UserService), new(*impl2.UserServiceImpl)), impl3.NewUserController, wire.Bind(new(contracts3.UserController), new(*impl3.UserControllerImpl)))

var contactControllerSet = wire.NewSet(impl.NewContactRepositoryImpl, wire.Bind(new(contracts.ContactRepository), new(*impl.ContactRepositoryImpl)), impl2.NewContactServiceImpl, wire.Bind(new(contracts2.ContactService), new(*impl2.ContactServiceImpl)), impl3.NewContactControllerImpl, wire.Bind(new(contracts3.ContactController), new(*impl3.ContactControllerImpl)))

var addressControllerSet = wire.NewSet(impl.NewAddressRepositoryImpl, wire.Bind(new(contracts.AddressRepository), new(*impl.AddressRepositoryImpl)), impl2.NewAddressServiceImpl, wire.Bind(new(contracts2.AddressService), new(*impl2.AddressServiceImpl)), impl3.NewAddressControllerImpl, wire.Bind(new(contracts3.AddressController), new(*impl3.AddressControllerImpl)))
